** general notes
leidenbase git r:
  o  use the leidenbase repository branch called dev
     for development

** building (after setup)
  o  (edit igraph in leidenbase/igraph, as noted below)
  o  run 'make clean' followed by 'make' in the dev
     repository to generate an R package for
     distribution
  o  copy the R package contents into the leidenbase
     repository master branch where it is used by
     the devtools::install_github() command
  o  add excluded files to .Rbuildignore

** cautions
  o  make changes to igraph in leidenbase/igraph (not leidenbase/src/rigraph!)
     including
       o  remove R interface code from igraph: remove the following
            o  leidenbase/igraph/src/rinterface.h
            o  leidenbase/igraph/src/rinterface.cpp
            o  leidenbase/igraph/src/rinterface_extra.cpp
            o  leidenbase/igraph/src/init.c
       o  comment out line 'AC_CONFIG_SRCDIR(src/rinterface.c)' in
          leidenbase/templates/configure.ac.igraph.tpl
  o  watch for igraph graph directed/undirected when testing
  o  check igraph definitions: 
       o  types in include/igraph_types.h
       o  igraph_t in include/igraph_datatype.h
       o  igraph_vector in include/igraph_vector_type.h
  o  important source files are in the templates directory
     and are copied to their destinations by the Makefile
     script. It's important to edit the files in templates
     in order to make persistent changes to their children
     files. The Makefile tries to make this evident by
     reporting some differences between template and
     destination files, and pausing for a few seconds.

** setup
clone leidenbase from git repository
source: https://github.com/cole-trapnell-lab/leidenbase
notes:
##  The following commented out description is wrong. Skip it.
##  do not use submodules because the directory structure has
##  changed substantially and I don't have time to work out a
##  Makefile. The alternative is simple: use the R igraph tar.gz file
##  and distribute the files as described below.
##
##  o  cigraph versions > 0.8* use cmake and various subdirectories
##     in igraph/src so I am using cigraph versions 0.8.*.
##  o  cigraph 0.8.* versions are no longer accessible as branches; e.g.,
##     the URL for 0.8.5 is https://github.com/igraph/igraph/tree/0.8.5.
##     I don't understand 'tree's in github and I cannot clone a tree
##     or checkout a tree branch but apparently one can check them out
##     using their SHA strings.
##  o  I found the 0.8.5 tree SHA string as follows
##       o  go to igraph releases on the right side of the repository page
##       o  find the desired release and the SHA string is in the left
##          column, beneath the release version string 'tag', which are
##          to the left of the release title
##  o  I got the version string using <igraph>/tools/getversion.sh
##  o  leidenbase uses git submodule to 'import' the
##     C igraph source code.
##  o  git clone commands
##       git clone <git_repository>
##       cd leidenbase
##       git checkout dev
##       git submodule add https://github.com/igraph/igraph cigraph
##       git submodule init
##       git submodule update
##       git submodule foreach git pull origin master # this updates the modules
##       # for checking out tree (not master)
##       cd cigraph
##       git checkout <SHA string>
##       Note: the Makefile script expects the git submodule in leidenbase/cigraph
##  o  git submodule information URL: https://gist.github.com/gitaarik/8735255

  o  set up the R igraph code as follows
       o  download the R igraph *.tar.gz file
            URL: https://cran.r-project.org/src/contrib/igraph_1.2.11.tar.gz
       o  untar igraph in leidenbase, which creates a directory called igraph 

  o  copy leidenalg source and include files to leidenbase/src/leidenalg/(include|src)
       o  may need to edit src/Optimiser.cpp an src/MutableVertexPartition.cpp to prevent
          calls to cerr, which makes devtools::check() emit a note. Pacify devtools::check()
          with the following edits
            o  in Optimiser.cpp: make Optimiser::print_settings() look like
void Optimiser::print_settings()
{
#ifndef USING_R
  cerr << "Consider communities method:\t" << this->consider_comms << endl;
  cerr << "Refine partition:\t" << this->refine_partition << endl;
#else
  ((void)0);
#endif
}
           o  in MutableVertexPartition.cpp make MutableVertexPartition::renumber_communities() look like
void MutableVertexPartition::renumber_communities(vector<size_t> const& membership)
{
#ifndef USING_R
  cerr << "This function is deprecated, use MutableVertexPartition::set_membership(vector<size_t> const& membership)" << endl;
#endif
  this->set_membership(membership);
}

  o  in leidenbase/src/rigraph
       o  the configure script sets the preprocessor definitions in
          leidenbase/src/rigraph/src/config.h (from config.h.in)
       o  there is no Makevars or Makevars.in script in leidenbase/src/rigraph or
          leidenbase/src/rigraph/src
  o  in leidenbase
       o  configure ...
  o  in leidenbase/src
       o  Makevars and Makevars.win: define some variables and the OBJECTS required
          for the shared library. This should force compilation of the c and FORTRAN
          files in the rigraph subdirectory.


  o  leidenbase version numbers are set in/by leidenbase/Makefile.
     Set this value as required in the Makefile body.
  o  the Makefile extracts the igraph version from the igraph DESCRIPTION
     file.
  o  object_files and Makevars.* (where Makevars.* has OBJECTS defined as
     the object files in the file object_files) are made/updated by
     leidenbase/Makefile
  o  the Makefile runs autoconf on the configure.ac/configure.win files.
  o  run Make in leidenbase dev
  o  run 'R CMD Rd2pdf leidenbase' where leidenbase is the directory
     that contains the unpacked package. Move the resulting pdf file to
     leidenbase/inst/doc.
  o  run R: devtools::document() before packaging
  o  check before packaging
       o  run R CMD check --as-cran
       o  run R CMD INSTALL
       o  run devtools::test()
       o  check compilation
            o  Windows
            o  MacOS Intel
            o  MacOS ARM
            o  Linux
            o  r-devel using a docker container
            o  check using rhub: see https://r-hub.github.io/rhub/articles/rhub.html and https://www.datanovia.com/en/blog/how-to-run-cran-checks-for-a-package-on-r-hub/
                 o  library(devtools)
                    library(rhub)
                    rhub::platforms()
                    rhub::check_rhub(pkg=".", platforms="<platform or array of platforms?>")
                    rhub::check_for_cran()
            o check Macos using devtools
                 o library(devtools)
                   devtools::check_mac_release(pkg=".")
            o check Windows using devtools
                 o library(devtools)
                   devtools::check_win_devel or check_win_release
       o  check for stray files in the package
  o  re-run Make to create leidenbase tar.gz file
  o  move leidenbase_x.x.x.tar.gz file into parent directory
  o  remove leidenbase master: in leidenbase repository:
       o  git checkout master
       o  rm DESCRIPTION NEWS.md README.md configure configure.ac install-sh
       o  rm -r R doc tests man src inst
  o  in parent directory untar leidenbase_x.x.x.tar.gz into leidenbase
       tar xzvf leidenbase_x.x.x.tar.gz
  o  add and commit leidenbase master and push to github


destination file: $top_dir/Makefile
source: R igraph $top_dir/Makefile
notes:
  o  the leidenbase Makefile is a modified version of the
     R igraph Makefile

destination file: $top_dir/templates/igraph.h.tpl
source: C igraph package $top_dir/include/igraph.h
notes:

destination file: $top_dir/templates/configure.ac.igraph.tpl
source: R igraph package $top_dir/configure.ac
notes:
  o  modify the line (this is unnecessary now, apparently)
       AC_CONFIG_SRCDIR(src/rinterface.c)
     to
       AC_CONFIG_SRCDIR(src/igraph_set.c)
  o  comment out or remove the lines
       AC_CONFIG_FILES([src/Makevars.tmp:src/Makevars.in], [
           if test -f src/Makevars && cmp -s src/Makevars.tmp src/Makevars; then
             AC_MSG_NOTICE([creating src/Makevars])
             AC_MSG_NOTICE([src/Makevars is unchanged])
             rm src/Makevars.tmp
           else
             AC_MSG_NOTICE([creating src/Makevars])
             mv src/Makevars.tmp src/Makevars
           fi
         ]
       )

destination file: $top_dir/templates/configure.win
source: R igraph package $top_dir/configure.win
notes:
  o  configure.win is empty in the R igraph package

destination file: $top_dir/templates/install-sh.tpl
source: .
notes:
  o  configure looks (apparently) for the existence of
     $top_dir/install-sh when configure.ac has the macro
       AC_CONFIG_SUBDIRS
     This install-sh script is empty.

destination file: $top_dir/NAMESPACE
source: generated by devtools::document()

** Windows notes
  o  installing on Windows runs configure.win and uses Makevars.win.
     The Makefile script is intended to make configure.win and
     Makevars.win files correctly.
  o  preparation
       o  install R for Windows
       o  install Rtools
       o  install gfortran
       o  consider installing gvim
       o  set PATH to R tools bin and gvim directories. One may need to set
          the .bashrc in order for the Rtools bash script to find the
          programs.
       o  I tried installing the Linux for Windows Ubuntu but it seemed
          to create a parallel machine instead of UNIX tools on Windows.
       o  I used the Rtools bash shell for work with gvim <filename> to
          edit files.
       o  20220118: I had some difficulties because igraph seemed to want
          the libxml and -lgmp on the linker call but I believe that I fixed
          these issues using configure.win and Makevars.win.
       

== Changes

** prepare leidenbase release 0.1.4

leidenalg version: 0.8.8 commit (b53366829360e10922a2dbf57eb405a516c23bc9)
igraph version: 1.2.11
various minor improvements in preparation for CRAN submission

** prepare leidenbase releasde 0.1.3

leidenalg version: 0.8.4.dev4+g0947e63
igraph version: 0.8.5


** prepare leidenbase release 0.1.2

  o  edit templates/Makevars.in.tpl to add -DUSING_R

  o  edit src/igraph_rinterface.cpp and src/leidenFindPartitionR2C.cpp to use appropriate error handler

  o  run git submodule commands

  o  edit leidenbase/Makefile to set VERSION_LEIDENBASE=0.1.2 and VERSION_IGRAPH=0.8.2

  o  update README.md

  o  update version numbers in DESCRIPTION

  o  remove Imports igraph from DESCRIPTION

